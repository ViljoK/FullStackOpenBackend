{"version":3,"sources":["services/persons.js","components/Contact.js","components/Contacts.js","components/Input.js","components/FormTable.js","components/InputTable.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newPerson","post","updatePerson","put","concat","id","delete","status","Contact","_ref","name","number","deletePerson","react_default","a","createElement","className","onClick","Contacts","persons","filter","contactsToShow","person","filterPieces","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","piece","value","toLowerCase","includes","err","return","Fragment","map","components_Contact","key","Input","handler","reff","ref","onChange","FormTable","inputs","onsubmit","onSubmit","input","components_Input","type","InputTable","Notification","message","divStyle","margin","padding","border","borderRadius","width","backgroundColor","color","style","textAlign","text","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","setMessage","useEffect","console","log","personService","initialPersons","length","nameRef","useRef","numberRef","addStates","event","target","filterStates","components_InputTable","components_FormTable","preventDefault","existingPerson","find","obj","window","confirm","returnedPerson","current","focus","setTimeout","components_Contacts","persist","index","findIndex","parseInt","catch","error","components_Notification","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.eb46d964.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\nconst update = updatePerson => {\n    const request = axios.put(`${baseUrl}/${updatePerson.id}`, updatePerson)\n    return request.then(response => response.data)\n}\nconst drop = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => {\n        if (response.status === 200) {\n            return \"Poisto onnistui\"\n        }\n        else {\n            return \"Poisto epÃ¤onnistui\"\n        }\n    })\n}\n\nexport default {getAll, create, update, drop}","import React from 'react'\n\nconst Contact = ({name, number, deletePerson, id}) =>\n    <tr>\n        <td className='name'>{name}</td>\n        <td className='phone'>{number}</td>\n        <td>\n            <button id={id} onClick={deletePerson}>Delete</button>\n        </td>\n    </tr>\n\nexport default Contact","import React from 'react'\nimport Contact from './Contact'\n\nconst Contacts = ({persons, filter, deletePerson}) => {\n    let showAll = filter === ''\n\n    const contactsToShow = showAll\n        ? persons\n        : persons.filter(person => {\n            const filterPieces = filter.split(\" \")\n            for (let piece of filterPieces) {\n                if (!person.name.toLowerCase().includes(piece.toLowerCase()) && !person.number.includes(piece)) {\n                    return false\n                }\n            }\n            return true\n        })\n\n    const rows = () => contactsToShow.map(person =>\n        <Contact\n            key             = {person.id}\n            id              = {person.id}\n            name            = {person.name}\n            number          = {person.number}\n            deletePerson    = {deletePerson} \n        />\n    )\n    return (\n        <>\n            <table>\n                <tbody>\n                    {rows()}\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default Contacts","import React from 'react'\n\nconst Input = ({handler, value, reff}) => <input ref={reff} value={value} onChange={handler}/>\n\nexport default Input","import React from 'react'\nimport Input from './Input'\n\nconst FormTable = ({inputs, onsubmit}) => {\n    const rows = () => inputs.map(input =>\n        <tr key={input.id}>\n            <td>{input.name}</td>\n            <td>\n                <Input reff={input.ref} handler={input.handler} value={input.value} />\n            </td>\n        </tr>\n    )\n    return (\n        <>\n            <form onSubmit={onsubmit}>\n                <table>\n                    <tbody>\n                        {rows()}\n                    </tbody>\n                </table>\n                <button type={\"submit\"}>Add</button>\n            </form>\n        </>\n    )\n}\n\nexport default FormTable","import React from 'react'\nimport Input from './Input'\n\nconst InputTable = ({inputs}) => {\n    const rows = () => inputs.map(input =>\n        <tr key={input.id}>\n            <td>{input.name}</td>\n            <td>\n                <Input handler={input.handler} value={input.value} />\n            </td>\n        </tr>\n    )\n    return (\n        <>\n            <table>\n                <tbody>\n                {rows()}\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default InputTable","import React from 'react'\n\nconst Notification = ({message}) => {\n    if (message === null) {\n        return null\n    }\n    const divStyle = {\n        margin: '20px 0 0 20px',\n        padding: 10,\n        border: '1px solid black',\n        borderRadius: 10,\n        width: 500,\n        backgroundColor: message.color\n    }\n    const msgStyle = {\n        width: '95%',\n        margin: '0 auto 0 auto',\n        textAlign: 'center'\n    }\n\n    return (\n        <>\n            <div style={divStyle}>\n                <p style={msgStyle}>{message.text}</p>\n            </div>\n        </>\n    )\n}\n\nexport default Notification","import React, { useState, useRef, useEffect } from 'react'\nimport personService from './services/persons'\nimport Contacts from './components/Contacts'\nimport FormTable from \"./components/FormTable\"\nimport InputTable from \"./components/InputTable\"\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n    const [ persons, setPersons]        = useState([])\n    const [ newName, setNewName ]       = useState('')\n    const [ newNumber, setNewNumber ]   = useState('')\n    const [ filter, setFilter]          = useState('')\n    const [Â message, setMessage]        = useState(null)\n\n    useEffect( () => {\n        console.log('effect')\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n                console.log(`Haku valmis, lÃ¶ytyi: ${persons.length} yhteystietoa`)\n            })\n    }, [persons.length])\n\n    const nameRef = useRef('')\n    const numberRef = useRef('')\n\n    const addPerson = event => {\n        event.preventDefault()\n        if (newName === \"\") {\n            nameRef.current.focus()\n            return\n        }\n        else if (newNumber === \"\") {\n            numberRef.current.focus()\n            return\n        }\n        const existingPerson = persons.find(obj => obj.name === newName)\n        if (existingPerson !== undefined){\n            \n            if (window.confirm(`HenkilÃ¶ ${existingPerson.name} lÃ¶ytyy jo osoitekirjasta. \\nHaluatko pÃ¤ivittÃ¤Ã¤ numeron?`)) {\n                const updatePerson = {\n                    name:   existingPerson.name,\n                    number: newNumber,\n                    id: existingPerson.id\n                }\n                personService\n                    .update(updatePerson)\n                    .then(returnedPerson => {\n                        setPersons([])\n                        setNewName('')\n                        setNewNumber('')\n                        nameRef.current.focus()\n                        setMessage({text: `${returnedPerson.name} tiedot pÃ¤ivitetty`, color: 'lightgreen'})\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 4000)\n                    })\n            }\n        }else {\n            const newPerson = {\n                name:   newName,\n                number: newNumber\n            }\n            personService\n                .create(newPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    nameRef.current.focus()\n                    setMessage({text: `${returnedPerson.name} lisÃ¤tty`, color: 'lightgreen'})\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 4000)\n                })\n        }\n    }\n\n    const deletePerson = event => {\n        event.persist()\n        const index = persons.findIndex(person => person.id === parseInt(event.target.id))\n        console.log(persons, index, event.target.id)\n        if (window.confirm(`Haluatko varmasti poistaa ${persons[index].name}`)) {\n            personService\n                .drop(event.target.id)\n                .then(response => {\n                    setMessage({text: 'Poisto onnistui', color: 'lightgreen'})\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 4000)\n                    console.log(response)\n                })\n                .catch(error => {\n                    setMessage({text: 'Virhe: HenkilÃ¶ oli jo poistettu', color: 'red'})\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 4000)\n                    console.log(error)\n                })\n            setPersons([])\n        }\n    }\n\n    const handleNameChange = event => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = event => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = event => {\n        setFilter(event.target.value)\n    }\n\n    const addStates = [\n        {\n            name:       \"Name\",\n            value:      newName,\n            handler:    handleNameChange,\n            id:         1,\n            ref:        nameRef,\n        },\n        {\n            name:       \"Number\",\n            value:      newNumber,\n            handler:    handleNumberChange,\n            id:         2,\n            ref:        numberRef,\n        },\n    ]\n\n    const filterStates = [\n        {\n            name:       \"Filter\",\n            value:      filter,\n            handler:    handleFilterChange,\n            id:         1\n        }\n    ]\n    const appStyle = {\n        width: 400,\n        margin: '0 auto 0 auto',\n        border: '5px solid darkblue',\n        borderRadius: 10,\n        padding: 10\n    }\n\n    return (\n        <div style={appStyle}>\n            <h1>Phonebook</h1>\n            <InputTable inputs={filterStates} />\n            <h2>Add new</h2>\n            <FormTable inputs={addStates} onsubmit={addPerson}/>\n            <h2>Contacts</h2>\n            <Contacts persons={persons} filter={filter} deletePerson={deletePerson}/>\n            <Notification message = {message} />\n        </div>\n    )\n\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}